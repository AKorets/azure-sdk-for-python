# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Serializer, Deserializer
from msrestazure import AzureConfiguration
from .version import VERSION
from .operations.addsservices_operations import AddsservicesOperations
from .operations.alerts_operations import AlertsOperations
from .operations.configuration_operations import ConfigurationOperations
from .operations.dimensions_operations import DimensionsOperations
from .operations.addsservicemembers_operations import AddsservicemembersOperations
from .operations.addomainservicemembers_operations import AddomainservicemembersOperations
from .operations.operations import Operations
from .operations.services_operations import ServicesOperations
from .operations.servicemembers_operations import ServicemembersOperations
from .operations.servimembers_operations import ServimembersOperations
from . import models


class ADHybridHealthServiceConfiguration(AzureConfiguration):
    """Configuration for ADHybridHealthService
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, base_url=None):

        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        if not base_url:
            base_url = 'https://management.azure.com'

        super(ADHybridHealthServiceConfiguration, self).__init__(base_url)

        self.add_user_agent('azure-mgmt-adhybridhealthservice/{}'.format(VERSION))
        self.add_user_agent('Azure-SDK-For-Python')

        self.credentials = credentials


class ADHybridHealthService(SDKClient):
    """REST APIs for Azure Active Drectory Connect Health

    :ivar config: Configuration for client.
    :vartype config: ADHybridHealthServiceConfiguration

    :ivar addsservices: Addsservices operations
    :vartype addsservices: azure.mgmt.adhybridhealthservice.operations.AddsservicesOperations
    :ivar alerts: Alerts operations
    :vartype alerts: azure.mgmt.adhybridhealthservice.operations.AlertsOperations
    :ivar configuration: Configuration operations
    :vartype configuration: azure.mgmt.adhybridhealthservice.operations.ConfigurationOperations
    :ivar dimensions: Dimensions operations
    :vartype dimensions: azure.mgmt.adhybridhealthservice.operations.DimensionsOperations
    :ivar addsservicemembers: Addsservicemembers operations
    :vartype addsservicemembers: azure.mgmt.adhybridhealthservice.operations.AddsservicemembersOperations
    :ivar addomainservicemembers: Addomainservicemembers operations
    :vartype addomainservicemembers: azure.mgmt.adhybridhealthservice.operations.AddomainservicemembersOperations
    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.adhybridhealthservice.operations.Operations
    :ivar services: Services operations
    :vartype services: azure.mgmt.adhybridhealthservice.operations.ServicesOperations
    :ivar servicemembers: Servicemembers operations
    :vartype servicemembers: azure.mgmt.adhybridhealthservice.operations.ServicemembersOperations
    :ivar servimembers: Servimembers operations
    :vartype servimembers: azure.mgmt.adhybridhealthservice.operations.ServimembersOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, base_url=None):

        self.config = ADHybridHealthServiceConfiguration(credentials, base_url)
        super(ADHybridHealthService, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2014-01-01'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.addsservices = AddsservicesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.alerts = AlertsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.configuration = ConfigurationOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.dimensions = DimensionsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.addsservicemembers = AddsservicemembersOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.addomainservicemembers = AddomainservicemembersOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.operations = Operations(
            self._client, self.config, self._serialize, self._deserialize)
        self.services = ServicesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.servicemembers = ServicemembersOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.servimembers = ServimembersOperations(
            self._client, self.config, self._serialize, self._deserialize)
